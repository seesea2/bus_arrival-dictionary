{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.includes.js","webpack:///./node_modules/core-js/internals/not-a-regexp.js","webpack:///./src/components/EmailManage.vue","webpack:///./src/components/EmailManage.vue?0c2c","webpack:///./src/components/EmailGroupManage.vue","webpack:///./src/components/EmailGroupManage.vue?8000","webpack:///./src/views/EmailManagement.vue","webpack:///./src/views/EmailManagement.vue?043e","webpack:///./node_modules/core-js/internals/correct-is-regexp-logic.js"],"names":["$","uncurryThis","notARegExp","requireObjectCoercible","toString","correctIsRegExpLogic","stringIndexOf","indexOf","target","proto","forced","includes","searchString","this","arguments","length","undefined","global","isRegExp","TypeError","module","exports","it","data","reactive","curEmail","allGroups","showingInputs","allEmails","showingEmails","disableSubmit","msg","showInputs","orgEmail","orgGroups","email","groups","axios","get","then","resp","catch","e","console","log","showEmails","confirmEmail","group","checked","push","post","err","setTimeout","editEmail","emailObj","name","company","team","role","obj","groupObj","deleteEmail","delete","__exports__","curGroup","emails","orgGroup","orgEmails","showingGroupInputs","showingViewGroups","confirmEmailGroup","item","showViewGroups","showGroupInputs","editEmailGroup","deleteEmailGroup","document","title","onBeforeMount","loginId","router","wellKnownSymbol","MATCH","METHOD_NAME","regexp","error1","error2"],"mappings":"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","file":"js/chunk-18bae6a6.9a0c044e.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\n\nvar stringIndexOf = uncurryThis(''.indexOf);\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~stringIndexOf(\n      toString(requireObjectCoercible(this)),\n      toString(notARegExp(searchString)),\n      arguments.length > 1 ? arguments[1] : undefined\n    );\n  }\n});\n","var global = require('../internals/global');\nvar isRegExp = require('../internals/is-regexp');\n\nvar TypeError = global.TypeError;\n\nmodule.exports = function (it) {\n  if (isRegExp(it)) {\n    throw TypeError(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n","<template>\r\n  <div class=\"mt-3\" name=\"emails\">\r\n    <!-- for add email -->\r\n    <div>\r\n      <button\r\n        v-if=\"!data.showingInputs\"\r\n        class=\"btn btn-primary\"\r\n        @click=\"showInputs()\"\r\n      >\r\n        New Email\r\n      </button>\r\n      <button\r\n        v-if=\"!data.showingEmails\"\r\n        class=\"btn btn-primary mx-1\"\r\n        @click=\"showEmails()\"\r\n      >\r\n        View Emails\r\n      </button>\r\n    </div>\r\n\r\n    <div v-if=\"data.showingInputs\" class=\"mt-2\">\r\n      <div class=\"form row\">\r\n        <div class=\"form-floating col-md-3 col-sm-12\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"email\"\r\n            v-model.trim=\"data.curEmail.email\"\r\n            required\r\n          />\r\n          <label for=\"floatingInput\" class=\"small\">Email</label>\r\n        </div>\r\n        <div class=\"form-floating col-md-3 col-sm-12\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"name\"\r\n            v-model.trim=\"data.curEmail.name\"\r\n          />\r\n          <label for=\"floatingInput\" class=\"small\">Name</label>\r\n        </div>\r\n        <div class=\"form-floating col-md-3 col-sm-12\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"company\"\r\n            v-model.trim=\"data.curEmail.company\"\r\n          />\r\n          <label for=\"floatingInput\" class=\"small\">Company</label>\r\n        </div>\r\n        <div class=\"form-floating col-md-3 col-sm-12\">\r\n          <input\r\n            class=\"form-control\"\r\n            placeholder=\"team\"\r\n            v-model.trim=\"data.curEmail.team\"\r\n          />\r\n          <label for=\"floatingInput\" class=\"small\">Team</label>\r\n        </div>\r\n\r\n        <div class=\"mt-2\">\r\n          <label v-if=\"data.allGroups.length\" class=\"me-2\">\r\n            Add to groups:\r\n          </label>\r\n          <div\r\n            v-for=\"group in data.allGroups\"\r\n            class=\"form-check form-check-inline\"\r\n            :key=\"group.group\"\r\n          >\r\n            <input\r\n              class=\"form-check-input\"\r\n              v-model=\"group.checked\"\r\n              type=\"checkbox\"\r\n              value=\"\"\r\n            />\r\n            <label class=\"form-check-label\">{{ group.group }}</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"text-center mt-2\">\r\n          <div v-if=\"data.msg\" class=\"my-2\">\r\n            <label class=\"bg-info px-1\">{{ data.msg }}</label>\r\n          </div>\r\n          <button\r\n            class=\"btn btn-success\"\r\n            @click=\"confirmEmail()\"\r\n            :disabled=\"data.disableSubmit\"\r\n          >\r\n            Confirm\r\n          </button>\r\n          <button\r\n            class=\"btn btn-success mx-1\"\r\n            @click=\"data.showingInputs = false\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- view emails -->\r\n    <div v-if=\"data.showingEmails\" class=\"mt-2\">\r\n      <table class=\"table caption-top\">\r\n        <thead class=\"text-center\">\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Email</th>\r\n            <th>Name</th>\r\n            <th>Company</th>\r\n            <th>Team</th>\r\n            <th>Ops</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"text-center\">\r\n          <tr v-for=\"(email, ind) in data.allEmails\" :key=\"ind\">\r\n            <td>{{ ind + 1 }}</td>\r\n            <td>{{ email.email }}</td>\r\n            <td>{{ email.name }}</td>\r\n            <td>{{ email.company }}</td>\r\n            <td>{{ email.team }}</td>\r\n            <td>\r\n              <button class=\"btn btn-light btn-small\" @click=\"editEmail(email)\">\r\n                Edit\r\n              </button>\r\n              <button\r\n                class=\"btn btn-light btn-small mx-1\"\r\n                @click=\"deleteEmail(email)\"\r\n                :disabled=\"data.disableSubmit\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <div class=\"text-center\">\r\n        <div v-if=\"data.msg\" class=\"my-2\">\r\n          <label class=\"bg-info px-1\">{{ data.msg }}</label>\r\n        </div>\r\n        <button\r\n          class=\"btn btn-success mx-1\"\r\n          @click=\"data.showingEmails = false\"\r\n        >\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from \"axios\";\r\nimport { reactive } from \"vue\";\r\n\r\nlet data = reactive({\r\n  curEmail: {},\r\n  allGroups: [],\r\n  showingInputs: false,\r\n  allEmails: [],\r\n  showingEmails: false,\r\n  disableSubmit: false,\r\n  msg: \"\",\r\n});\r\n\r\nfunction showInputs() {\r\n  data.curEmail.orgEmail = null;\r\n  data.curEmail.orgGroups = [];\r\n  data.curEmail.email = null;\r\n  data.curEmail.groups = [];\r\n  data.msg = null;\r\n\r\n  data.allGroups.length = 0;\r\n  axios\r\n    .get(\"/api/msi/emails/groups\")\r\n    .then((resp) => {\r\n      data.allGroups = resp.data;\r\n      data.showingEmails = false;\r\n      data.showingInputs = true;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n}\r\n\r\nfunction showEmails() {\r\n  data.msg = null;\r\n  axios\r\n    .get(\"/api/msi/emails\")\r\n    .then((resp) => {\r\n      data.allEmails.length = 0;\r\n      data.allEmails = resp.data;\r\n      data.showingInputs = false;\r\n      data.showingEmails = true;\r\n    })\r\n    .catch((e) => {\r\n      console.log(\"showEmails:\", e);\r\n    });\r\n}\r\n\r\nfunction confirmEmail() {\r\n  // console.log(data.curEmail);\r\n  if (!data.curEmail.email) {\r\n    data.msg = \"Please input email.\";\r\n    return;\r\n  }\r\n\r\n  data.msg = \"\";\r\n  data.curEmail.groups.length = 0;\r\n  for (let group of data.allGroups) {\r\n    // console.log(\"group before submit:\", group);\r\n    if (group.checked) {\r\n      data.curEmail.groups.push(group.group);\r\n    }\r\n  }\r\n\r\n  // console.log(\"add email: \", data.curEmail);\r\n  data.disableSubmit = true;\r\n  axios\r\n    .post(\"/api/msi/emails\", data.curEmail)\r\n    .then((resp) => {\r\n      // console.log(resp);\r\n      if (resp.data.err) {\r\n        data.msg = resp.data.err;\r\n        data.disableSubmit = false;\r\n        return;\r\n      }\r\n      data.msg = resp.data.msg;\r\n\r\n      setTimeout(() => {\r\n        data.disableSubmit = false;\r\n        data.msg = null;\r\n        showEmails();\r\n      }, 2000);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      data.msg = err;\r\n      data.disableSubmit = false;\r\n    });\r\n}\r\n\r\nfunction editEmail(emailObj) {\r\n  showInputs();\r\n\r\n  data.curEmail.orgEmail = emailObj.email;\r\n  data.curEmail.email = emailObj.email;\r\n  data.curEmail.name = emailObj.name;\r\n  data.curEmail.company = emailObj.company;\r\n  data.curEmail.team = emailObj.team;\r\n  data.curEmail.role = emailObj.role;\r\n\r\n  axios\r\n    .get(\"/api/msi/emails/groups?email=\" + emailObj.email)\r\n    .then((resp) => {\r\n      // console.log(resp.data);\r\n      data.curEmail.orgGroups.length = 0;\r\n      for (let obj of resp.data) {\r\n        data.curEmail.orgGroups.push(obj.group);\r\n      }\r\n\r\n      for (let groupObj of data.allGroups) {\r\n        if (data.curEmail.orgGroups.includes(groupObj.group)) {\r\n          groupObj.checked = true;\r\n        }\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n}\r\n\r\nfunction deleteEmail(emailObj) {\r\n  data.disableSubmit = true;\r\n  axios\r\n    .delete(\"/api/msi/emails/\" + emailObj.email)\r\n    .then((resp) => {\r\n      // console.log(resp);\r\n      if (resp.data.err) {\r\n        data.msg = resp.data.err;\r\n        data.disableSubmit = false;\r\n        return;\r\n      }\r\n\r\n      data.msg = \"Successful.\";\r\n      data.disableSubmit = false;\r\n      showEmails();\r\n      setTimeout(() => {\r\n        data.msg = \"\";\r\n      }, 2000);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      data.msg = err.msg;\r\n      data.disableSubmit = false;\r\n    });\r\n}\r\n</script>\r\n","import script from \"./EmailManage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EmailManage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"mt-3\" name=\"emails\">\r\n    <div>\r\n      <button\r\n        v-if=\"!data.showingGroupInputs\"\r\n        class=\"btn btn-primary\"\r\n        @click=\"showGroupInputs()\"\r\n      >\r\n        New Email Group\r\n      </button>\r\n      <button\r\n        v-if=\"!data.showingViewGroups\"\r\n        class=\"btn btn-primary mx-1\"\r\n        @click=\"showViewGroups()\"\r\n      >\r\n        View Email Groups\r\n      </button>\r\n    </div>\r\n\r\n    <!-- for add email group -->\r\n    <div v-if=\"data.showingGroupInputs\" class=\"mt-2\">\r\n      <div class=\"form\">\r\n        <div class=\"form-floating\">\r\n          <input\r\n            class=\"form-control col-auto\"\r\n            placeholder=\"group name\"\r\n            v-model.trim=\"data.curGroup.group\"\r\n            required\r\n          />\r\n          <label for=\"floatingInput\" class=\"small\">Group name</label>\r\n        </div>\r\n\r\n        <table class=\"table caption-top\">\r\n          <thead class=\"text-center\">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Email</th>\r\n              <th>Name</th>\r\n              <th>Team</th>\r\n              <th>Include</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"text-center\">\r\n            <tr v-for=\"(email, ind) in data.allEmails\" :key=\"email.email\">\r\n              <td>{{ ind + 1 }}</td>\r\n              <td>{{ email.email }}</td>\r\n              <td>{{ email.name }}</td>\r\n              <td>{{ email.team }}</td>\r\n              <td>\r\n                <div class=\"form-check\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    v-model=\"email.checked\"\r\n                    value=\"\"\r\n                  />\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"text-center mt-2\">\r\n          <div v-if=\"data.msg\" class=\"my-2\">\r\n            <label class=\"bg-info px-1\">{{ data.msg }}</label>\r\n          </div>\r\n          <button\r\n            class=\"btn btn-success\"\r\n            @click=\"confirmEmailGroup()\"\r\n            :disable=\"data.disableSubmit\"\r\n          >\r\n            Confirm\r\n          </button>\r\n          <button\r\n            class=\"btn btn-success mx-1\"\r\n            @click=\"data.showingGroupInputs = false\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- for view/edit email group -->\r\n    <div v-if=\"data.showingViewGroups\" class=\"mt-2\">\r\n      <div class=\"form\">\r\n        <table class=\"table caption-top\">\r\n          <thead class=\"text-center\">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Group</th>\r\n              <th>Ops</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"text-center\">\r\n            <tr v-for=\"(group, ind) in data.allGroups\" :key=\"ind\">\r\n              <td>{{ ind + 1 }}</td>\r\n              <td>{{ group.group }}</td>\r\n              <td>\r\n                <button\r\n                  class=\"btn btn-light btn-small\"\r\n                  @click=\"editEmailGroup(group)\"\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  class=\"btn btn-light btn-small mx-1\"\r\n                  @click=\"deleteEmailGroup(group)\"\r\n                  :disabled=\"data.disableSubmit\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"text-center mt-2\">\r\n          <button\r\n            class=\"btn btn-success\"\r\n            @click=\"data.showingViewGroups = false\"\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport axios from \"axios\";\r\nimport { reactive } from \"vue\";\r\n\r\n// let emit = defineEmits([\"edit\"]);\r\n\r\nlet data = reactive({\r\n  disableSubmit: false,\r\n  curGroup: {\r\n    group: null,\r\n    emails: [],\r\n    orgGroup: null,\r\n    orgEmails: [],\r\n  },\r\n  msg: null,\r\n  allEmails: [],\r\n  showingGroupInputs: false,\r\n  allGroups: [],\r\n  showingViewGroups: false,\r\n});\r\n// console.log(\"yc1:\", data.group1);\r\n\r\n// watch(props.activity, () => {\r\n//   console.log(\"props.activity in watch\", props.activity);\r\n//   initData();\r\n// });\r\n\r\nfunction confirmEmailGroup() {\r\n  // console.log(\"in Submit:\", data.curActivity);\r\n  if (!data.curGroup.group) {\r\n    data.msg = \"Please input group name.\";\r\n    return;\r\n  }\r\n\r\n  data.msg = \"\";\r\n  data.curGroup.emails.length = 0;\r\n  for (let item of data.allEmails) {\r\n    // console.log(\"data.allEmails before submit\", item.email, item.checked);\r\n    if (item.checked) {\r\n      data.curGroup.emails.push(item.email);\r\n    }\r\n  }\r\n  // console.log(\"submit group:\", data.group);\r\n\r\n  data.disableSubmit = true;\r\n  axios\r\n    .post(\"/api/msi/emails/group\", data.curGroup)\r\n    .then((resp) => {\r\n      // console.log(resp.data);\r\n      if (resp.data.err) {\r\n        data.msg = resp.data.err;\r\n        data.disableSubmit = false;\r\n        return;\r\n      }\r\n      data.msg = resp.data.msg;\r\n\r\n      setTimeout(() => {\r\n        data.disableSubmit = false;\r\n        data.msg = null;\r\n        showViewGroups();\r\n      }, 2000);\r\n    })\r\n    .catch((e) => {\r\n      data.msg = e;\r\n      console.log(e);\r\n      data.disableSubmit = false;\r\n    });\r\n}\r\n\r\nfunction showGroupInputs() {\r\n  data.curGroup.orgGroup = null;\r\n  data.curGroup.orgEmails = [];\r\n  data.curGroup.group = null;\r\n  data.curGroup.emails = [];\r\n  data.msg = null;\r\n\r\n  data.allEmails.length = 0;\r\n  axios\r\n    .get(\"/api/msi/emails\")\r\n    .then((resp) => {\r\n      // console.log(resp.data);\r\n      data.allEmails = resp.data;\r\n      data.showingViewGroups = false;\r\n      data.showingGroupInputs = true;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n}\r\n\r\nfunction showViewGroups() {\r\n  axios\r\n    .get(\"/api/msi/emails/groups\")\r\n    .then((resp) => {\r\n      // console.log(resp.data);\r\n      data.allGroups.length = 0;\r\n      data.allGroups = resp.data;\r\n\r\n      data.showingGroupInputs = false;\r\n      data.showingViewGroups = true;\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n}\r\n\r\nfunction editEmailGroup(groupObj) {\r\n  showGroupInputs();\r\n\r\n  data.curGroup.orgGroup = groupObj.group;\r\n  data.curGroup.group = groupObj.group;\r\n  axios\r\n    .get(\"/api/msi/emails/groups?group=\" + groupObj.group)\r\n    .then((resp) => {\r\n      // console.log(resp.data);\r\n      data.curGroup.orgEmails.length = 0;\r\n      for (let obj of resp.data) {\r\n        data.curGroup.orgEmails.push(obj.email);\r\n      }\r\n\r\n      // console.log(\"data.curGroup.orgGroup:\", data.curGroup.orgGroup);\r\n      for (let emailObj of data.allEmails) {\r\n        if (data.curGroup.orgEmails.includes(emailObj.email)) {\r\n          emailObj.checked = true;\r\n        }\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n}\r\n\r\nfunction deleteEmailGroup(groupObj) {\r\n  // console.log(groupObj);\r\n  data.disableSubmit = true;\r\n  axios\r\n    .delete(\"/api/msi/emails/groups/\" + groupObj.group)\r\n    .then((resp) => {\r\n      // console.log(resp);\r\n      if (resp.data.err) {\r\n        data.msg = resp.data.err;\r\n        data.disableSubmit = false;\r\n        return;\r\n      }\r\n\r\n      data.msg = \"Successful.\";\r\n      data.disableSubmit = false;\r\n      showViewGroups();\r\n      setTimeout(() => {\r\n        data.msg = \"\";\r\n      }, 2000);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      data.msg = err.msg;\r\n      data.disableSubmit = false;\r\n    });\r\n}\r\n</script>\r\n","import script from \"./EmailGroupManage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EmailGroupManage.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <msi-navbar></msi-navbar>\r\n\r\n  <div class=\"container\">\r\n    <h4 class=\"my-4\">Email Address Management</h4>\r\n\r\n    <email-manage></email-manage>\r\n\r\n    <hr class=\"border-1 my-5\" />\r\n\r\n    <email-group-manage></email-group-manage>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onBeforeMount } from \"vue\";\r\n\r\nimport msiNavbar from \"../components/MsiNavbar.vue\";\r\nimport EmailManage from \"../components/EmailManage.vue\";\r\nimport EmailGroupManage from \"../components/EmailGroupManage.vue\";\r\n\r\nimport { loginId } from \"../common/msiLogin\";\r\nimport router from \"../router\";\r\n\r\ndocument.title = \"Email Management\";\r\n\r\n// let data = reactive({\r\n//   curEmail: {},\r\n//   groups: [],\r\n//   email: [],\r\n//   showEmailInputs: false,\r\n//   msg: \"\",\r\n// });\r\n\r\nonBeforeMount(() => {\r\n  if (!loginId()) {\r\n    router.push(\"/login\");\r\n    return;\r\n  }\r\n});\r\n</script>\r\n","import script from \"./EmailManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EmailManagement.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\nmodule.exports = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n"],"sourceRoot":""}